name: "P/D AWS Resources"

# Trigger the workflow manually from GitHub UI with an input
on:
  workflow_dispatch:
    inputs:
      action_type:
        description: 'Action Type (provision or destroy)'
        required: true
        default: 'provision'
        type: choice
        options:
          - provision
          - destroy
# Global environment variables used across all jobs
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TERRAFORM_VERSION: "1.2.5"
  # Directories for Terraform configurations
  WEB_APP_DIR: "./"
  # Backend configuration
  TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
  TF_BACKEND_KEY: ${{ secrets.TF_BACKEND_KEY }}
  TF_BACKEND_REGION: ${{ secrets.TF_BACKEND_REGION }}
  TF_BACKEND_DYNAMODB_TABLE: ${{ secrets.TF_BACKEND_DYNAMODB_TABLE }}

jobs:
  # Job for creating/Destroying AWS ressources
  manage_resources:
    if: ${{ github.event.inputs.action_type == 'provision' || github.event.inputs.action_type == 'destroy' }}
    name: Provision or Destroy AWS Resources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 # Checks out the repository code to the runner

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2 # Sets up specified Terraform version
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false
      - uses: actions/checkout@v3
      - name: Initialize Terraform
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ env.TF_BACKEND_KEY }}" \
            -backend-config="region=${{ env.TF_BACKEND_REGION }}" \
            -backend-config="dynamodb_table=${{ env.TF_BACKEND_DYNAMODB_TABLE }}" \
            -backend-config="encrypt=true"
        working-directory: ${{ env.WEB_APP_DIR }}
      - name: Apply or Destroy Terraform Configuration
        run: |
          if [ "${{ github.event.inputs.action_type }}" == "provision" ]; then
            terraform apply -auto-approve -input=false
          else
            terraform destroy -auto-approve
          fi
        working-directory: ${{ env.WEB_APP_DIR }}
