name: "(One Time Provision) Terraform State Backend"

# Trigger the workflow manually from GitHub UI with an input
on:
  workflow_dispatch:
    # inputs:
    #   action_type:
    #     description: 'Environnement Type'
    #     required: true
    #     default: 'provision'
    #     type: choice
    #     options:
    #       - INT
    #       - PROD
  
run-name: Deploy to ${{ github.ref_name }} by @${{ github.actor }}

# Global environment variables used across all jobs
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TERRAFORM_VERSION: "1.2.5"
  # Directories for Terraform configurations
  S3_CREATE_DIR: "./modules/backend"
  TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
  TF_BACKEND_REGION: ${{ secrets.TF_BACKEND_REGION }}
  TF_BACKEND_DYNAMODB_TABLE: ${{ secrets.TF_BACKEND_DYNAMODB_TABLE }}

jobs:
  # Job to create the backend (S3,Dynamo)
  manage_tf_backend:
    name: Provision/Destroy Terraform backend
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 # Checks out the repository code to the runner

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2 # Sets up specified Terraform version
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false
      - uses: actions/checkout@v3
      - name: Initialize Terraform Configuration for S3 Bucket
        run: |
          terraform init
        working-directory: ${{ env.S3_CREATE_DIR }}
      - name: Apply or Destroy Terraform Configuration
        run: |
          terraform apply -auto-approve -input=false \
            -var="bucket_name=${{ env.TF_BACKEND_BUCKET }}" \
            -var="dynamodb_table_name=${{ env.TF_BACKEND_DYNAMODB_TABLE }}" \
            -var="environment=${{ github.event.inputs.action_type }}" \
            -var="region=${{ env.AWS_REGION }}"
 
        working-directory: ${{ env.S3_CREATE_DIR }}